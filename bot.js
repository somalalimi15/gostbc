const Discord = require("discord.js")

const moment = require("moment")

const client = new Discord.Client();

const canvas = require("canvas");

const fs = require('fs')

const child_process = require("child_process");

const Rocket = new Discord.Client();

const jimp = require("jimp");// npm i jimp

const package = ('package.json');

const Util = require('discord.js');

const getYoutubeID = require('get-youtube-id');

const fetchVideoInfo = require('youtube-info');

const YouTube = require('simple-youtube-api');

const youtube = new YouTube("AIzaSyAdORXg7UZUo7sePv97JyoDqtQVi3Ll0b8");

const queue = new Map();

const ytdl = require('ytdl-core');

const dateFormat = require('dateformat');







const prefix = '-'


client.on('message',async message => {
  if(message.content.startsWith(prefix + "bcall")) {
if(message.member.hasPermissions(['ADMINISTRATOR'])) {
    let filter = m => m.author.id === message.author.id;
    let thisMessage;
    let thisFalse;
    message.channel.send('ðŸ‡§ðŸ‡¨| **Ø§Ø±Ø³Ù„ Ø§Ù„Ø±Ø³Ø§Ù„Ø© Ø§Ù„Ø§Ù†**').then(msg => {

    let awaitM = message.channel.awaitMessages(filter, {
      max: 1,
      time: 20000,
      errors: ['time']
    })
    .then(collected => {
      collected.first().delete();
      thisMessage = collected.first().content;
      msg.edit('ðŸ‡§ðŸ‡¨| **Ù‡Ù„ Ø§Ù†Øª Ù…ØªØ£ÙƒØ¯ØŸ**');
      let awaitY = message.channel.awaitMessages(response => response.content === 'Ù†Ø¹Ù…' || 'Ù„Ø§' && filter,{
        max: 1,
        time: 20000,
        errors: ['time']
      })
      .then(collected => {
        if(collected.first().content === 'Ù„Ø§') {
          msg.delete();
          message.delete();
          thisFalse = false;
        }
        if(collected.first().content === 'Ù†Ø¹Ù…') {
          if(thisFalse === false) return;
        message.guild.members.forEach(member => {
          msg.edit('ðŸ‡§ðŸ‡¨| **Ø¬Ø§Ø±ÙŠ Ø§Ù„Ø§Ø±Ø³Ø§Ù„**');
          collected.first().delete();
          member.send(`${thisMessage}\n\n${member} ,\nØªÙ… Ø§Ù„Ø§Ø±Ø³Ø§Ù„ Ù…Ù† : ${message.guild.name}\n ØªÙ… Ø§Ù„Ø§Ø±Ø³Ø§Ù„ Ø¨ÙˆØ§Ø³Ø·Ø© : ${message.author.tag}`);
        });
        }
      });
    });
    });
} else return message.reply('Ù„Ø§ ÙŠÙˆØ¬Ø¯ Ù„Ø¯ÙŠÙƒ Ø§Ù„ØµÙ„Ø§Ø­ÙŠØ§Øª')
  }
});

client.login(process.env.BOT_TOKEN); 
